services:
  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=94monizi
      - POSTGRES_DB=parkmobile
    ports:
      - "6001:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network # Подключение к общей сети

  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - app-network # Подключение к общей сети
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  web:
    build:
      context: ./ # Путь к директории с Dockerfile вашего ASP.NET приложения
      dockerfile: Dockerfile
    container_name: aspnet-api
    ports:
      - "3001:3001"
    depends_on:
      - db
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=parkmobile;Username=postgres;Password=94monizi
    networks:
      - app-network # Подключение к общей сети

  client:
    build:
      context: ./park-mobile-ssr
      dockerfile: Dockerfile
    container_name: nextjs-client
    ports:
      - "3000:3000"
    depends_on:
      - web

volumes:
  postgres-data:

networks:
  app-network: # Создаем общую сеть, которая может быть подключена к другим docker-compose
    external: true